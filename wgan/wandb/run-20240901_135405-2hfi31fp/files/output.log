C:\Users\UMI\Desktop\myenv\Lib\site-packages\gym\utils\passive_env_checker.py:233: DeprecationWarning: `np.bool8` is a deprecated alias for `np.bool_`.  (Deprecated NumPy 1.24)
  if not isinstance(terminated, (bool, np.bool8)):
Traceback (most recent call last):
  File "C:\Users\UMI\Desktop\gan\main.py", line 49, in <module>
    train_gan(gan_generator, gan_critic, gan_optimizer_g, gan_optimizer_d, real_actions, noise_dim, batch_size, epochs)
  File "C:\Users\UMI\Desktop\gan\gan.py", line 44, in train_gan
    optimizer_g.apply_gradients(zip(gradients_g, generator.trainable_variables))
  File "C:\Users\UMI\Desktop\myenv\Lib\site-packages\keras\src\optimizers\base_optimizer.py", line 291, in apply_gradients
    self.apply(grads, trainable_variables)
  File "C:\Users\UMI\Desktop\myenv\Lib\site-packages\keras\src\optimizers\base_optimizer.py", line 344, in apply
    grads, trainable_variables = self._filter_empty_gradients(
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\UMI\Desktop\myenv\Lib\site-packages\keras\src\optimizers\base_optimizer.py", line 676, in _filter_empty_gradients
    raise ValueError("No gradients provided for any variable.")
ValueError: No gradients provided for any variable.
Epoch 0: Gradients G: [None, None, None, None], Gradients D: [<tf.Tensor: shape=(1, 128), dtype=float32, numpy=
array([[ 0.01689124,  0.01065719,  0.01174421,  0.01963692,  0.00690496,
        -0.00928763, -0.01497193, -0.01711517, -0.01932688, -0.02158119,
         0.01412825, -0.0361521 ,  0.00861931, -0.00043604,  0.02602547,
        -0.02660482,  0.01249293, -0.02692005, -0.0349931 , -0.00958416,
        -0.01721482, -0.03907763,  0.03032196, -0.02301944,  0.03845538,
        -0.02764482,  0.02059999, -0.03717058,  0.00149399,  0.02928486,
        -0.02813509,  0.01204222,  0.01481871, -0.02371969, -0.00619444,
         0.01860752, -0.01646236,  0.01328815, -0.01814788,  0.02595255,
        -0.00573198, -0.02875366, -0.01873068, -0.00100456, -0.01952764,
        -0.02294186,  0.0034966 ,  0.00637592, -0.02092816,  0.02320653,
         0.02313105, -0.0021179 ,  0.02241614,  0.01683283,  0.01361906,
        -0.02824771,  0.00804626,  0.01367545,  0.00050963, -0.01985975,
        -0.00450099, -0.02222638, -0.02499323,  0.01793309, -0.03437275,
        -0.00705916,  0.02432302, -0.02256367,  0.01812142,  0.01427995,
        -0.00648044,  0.0040646 , -0.027557  ,  0.03815931, -0.00031764,
         0.03697437, -0.00146334, -0.02147165, -0.0274949 ,  0.01645219,
         0.02478371, -0.01604054,  0.02636551,  0.00949492,  0.02307979,
        -0.00610675,  0.00195402, -0.00311478, -0.00834706, -0.00190045,
        -0.00765382, -0.01833256, -0.01233232, -0.00583724, -0.00548348,
         0.00095504, -0.0236408 ,  0.02376873,  0.01209249, -0.00956869,
        -0.03865944, -0.01934651,  0.02693169, -0.01078072,  0.00614515,
         0.01609703,  0.01478517, -0.02905757,  0.02483404, -0.03531891,
        -0.03579152,  0.01589165, -0.00668764, -0.03531534, -0.03218111,
        -0.03162529,  0.00972822, -0.01435696,  0.02380194, -0.0223819 ,
        -0.01574779,  0.01335909, -0.03330827, -0.03609344,  0.02870064,
        -0.01659583,  0.0112053 , -0.00919462]], dtype=float32)>, <tf.Tensor: shape=(128,), dtype=float32, numpy=
array([-0.01520859, -0.02666898, -0.02938917, -0.01768101, -0.01727924,
        0.00836234,  0.01348038,  0.01541048,  0.01740206,  0.01943128,
       -0.03535511,  0.03255046, -0.02156932,  0.0003926 , -0.02343285,
        0.06657697, -0.01124863,  0.0242385 ,  0.03150771,  0.02398379,
        0.04307907,  0.03518461, -0.02730156,  0.05760478, -0.03462441,
        0.06917949, -0.05155024,  0.03346723, -0.00373861, -0.02636832,
        0.07040638, -0.01084244, -0.01334267,  0.02135646,  0.00557742,
       -0.01675373,  0.04119607, -0.01196467,  0.04541398, -0.02336722,
        0.01434395,  0.02588969,  0.01686485,  0.00090451,  0.01758258,
        0.02065639, -0.00875003, -0.00574078,  0.01884389, -0.02089532,
       -0.05788408,  0.00190695, -0.05609506, -0.01515624, -0.03408089,
        0.0706882 , -0.00724479, -0.01231333, -0.00045887,  0.04969783,
        0.00405272,  0.05562018,  0.02250379, -0.04487649,  0.0309493 ,
        0.00635597, -0.02190045,  0.05646423, -0.01631605, -0.01285758,
        0.01621691, -0.01017142,  0.02481198, -0.03435891,  0.00079488,
       -0.03329138,  0.00366191,  0.01933306,  0.06880433, -0.01481329,
       -0.06201975,  0.04014049, -0.06597811, -0.02376046, -0.02078126,
        0.00549836, -0.00488982,  0.00280451,  0.00751572,  0.00475576,
        0.01915322,  0.01650611,  0.01110379,  0.01460734,  0.01372209,
       -0.00085991,  0.0212862 , -0.02140122, -0.03026074,  0.02394508,
        0.03480895,  0.04841349, -0.06739496,  0.02697812, -0.01537786,
       -0.01449339, -0.03699901,  0.02616277, -0.0621457 ,  0.03180045,
        0.03222655, -0.01430867,  0.00602143,  0.03179763,  0.02897501,
        0.02847531, -0.00875936,  0.03592744, -0.02143141,  0.05600937,
        0.01417887, -0.01202847,  0.02999064,  0.0324975 , -0.02584182,
        0.04153007, -0.01008896,  0.00827859], dtype=float32)>, <tf.Tensor: shape=(128, 1), dtype=float32, numpy=
array([[-0.01278841],
       [ 0.01712871],
       [ 0.02465189],
       [-0.01880668],
       [ 0.02689526],
       [-0.0124892 ],
       [-0.0211208 ],
       [-0.01237722],
       [-0.02686264],
       [-0.03127554],
       [ 0.01819415],
       [-0.02159386],
       [ 0.00257898],
       [-0.03222924],
       [-0.03372898],
       [ 0.01113582],
       [-0.03153979],
       [-0.03391168],
       [-0.00634971],
       [ 0.02776304],
       [ 0.02754878],
       [-0.01877242],
       [-0.02584392],
       [ 0.01165415],
       [-0.00475953],
       [ 0.01768643],
       [ 0.01698725],
       [-0.02623395],
       [ 0.01180459],
       [-0.03068461],
       [ 0.02075815],
       [-0.02531448],
       [-0.02614938],
       [-0.00400614],
       [-0.01929162],
       [-0.00398393],
       [ 0.02110566],
       [-0.02430174],
       [ 0.02428638],
       [-0.00456559],
       [ 0.00218422],
       [-0.02904305],
       [-0.01918994],
       [-0.00265886],
       [-0.00753324],
       [-0.00301506],
       [ 0.01315012],
       [-0.03268286],
       [-0.0188797 ],
       [-0.00043667],
       [ 0.02519314],
       [-0.02237631],
       [ 0.01305264],
       [-0.01067852],
       [ 0.02486708],
       [ 0.01361384],
       [-0.00929455],
       [-0.01955108],
       [-0.02369634],
       [ 0.00931089],
       [-0.00303473],
       [ 0.01713207],
       [-0.025534  ],
       [ 0.0007749 ],
       [-0.01557591],
       [-0.02714669],
       [-0.0004152 ],
       [ 0.02743685],
       [-0.0163998 ],
       [-0.0035049 ],
       [ 0.00677584],
       [ 0.02418446],
       [-0.01037445],
       [-0.03623731],
       [ 0.00995212],
       [-0.01930105],
       [ 0.004596  ],
       [-0.03826662],
       [ 0.01055765],
       [-0.01393132],
       [ 0.02463358],
       [ 0.00452723],
       [ 0.02257691],
       [ 0.00977285],
       [-0.00315332],
       [-0.03214062],
       [ 0.01584929],
       [-0.02449514],
       [-0.00603939],
       [ 0.00477139],
       [ 0.02787942],
       [-0.03515964],
       [-0.02213635],
       [ 0.01798807],
       [ 0.01372284],
       [-0.03082586],
       [-0.00149405],
       [-0.01026053],
       [ 0.00621472],
       [ 0.00316294],
       [-0.01456648],
       [ 0.00944114],
       [ 0.00787541],
       [ 0.02362703],
       [ 0.01959847],
       [-0.01299877],
       [ 0.02549202],
       [-0.02589625],
       [ 0.00166011],
       [-0.01200933],
       [-0.0163886 ],
       [-0.0310205 ],
       [-0.01698114],
       [-0.00012428],
       [-0.02102638],
       [-0.0048224 ],
       [-0.02723793],
       [ 0.01134385],
       [-0.00982036],
       [ 0.02217339],
       [-0.01939253],
       [-0.02340657],
       [-0.02920027],
       [-0.03935558],
       [-0.01139691],
       [ 0.01534244],
       [-0.02913549],
       [-0.02518212]], dtype=float32)>, <tf.Tensor: shape=(1,), dtype=float32, numpy=array([0.], dtype=float32)>]