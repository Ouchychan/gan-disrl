C:\Users\UMI\Desktop\myenv\Lib\site-packages\gym\utils\passive_env_checker.py:233: DeprecationWarning: `np.bool8` is a deprecated alias for `np.bool_`.  (Deprecated NumPy 1.24)
  if not isinstance(terminated, (bool, np.bool8)):
Traceback (most recent call last):
  File "C:\Users\UMI\Desktop\gan\main.py", line 49, in <module>
    train_gan(gan_generator, gan_critic, gan_optimizer_g, gan_optimizer_d, real_actions, noise_dim, batch_size, epochs)
  File "C:\Users\UMI\Desktop\gan\gan.py", line 59, in train_gan
    optimizer_g.apply_gradients(zip(gradients_g, generator.trainable_variables))
  File "C:\Users\UMI\Desktop\myenv\Lib\site-packages\keras\src\optimizers\base_optimizer.py", line 291, in apply_gradients
    self.apply(grads, trainable_variables)
  File "C:\Users\UMI\Desktop\myenv\Lib\site-packages\keras\src\optimizers\base_optimizer.py", line 344, in apply
    grads, trainable_variables = self._filter_empty_gradients(
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\UMI\Desktop\myenv\Lib\site-packages\keras\src\optimizers\base_optimizer.py", line 676, in _filter_empty_gradients
    raise ValueError("No gradients provided for any variable.")
ValueError: No gradients provided for any variable.
Epoch 0:
Gradients G: [None, None, None, None]
Gradients D: [<tf.Tensor: shape=(1, 128), dtype=float32, numpy=
array([[ 3.2729246e-03,  8.1111491e-03,  4.6951715e-03,  4.3794292e-04,
         3.7957598e-03, -4.9866998e-04,  2.6500607e-03,  4.1248844e-04,
         4.1719180e-04, -4.1528206e-04, -7.2385445e-03,  4.4351593e-03,
        -3.4084349e-04,  7.1433559e-03,  5.3314678e-04, -5.6193862e-04,
        -7.3285824e-05,  4.4709500e-03, -8.1952065e-05, -6.2999368e-04,
         1.2657042e-03, -3.8471085e-04,  4.1458031e-04,  4.7544972e-04,
        -1.0025823e-03, -8.6247101e-03, -6.0830377e-03,  1.3086002e-04,
         8.3898485e-04, -5.1990041e-04,  3.9435804e-04, -5.1068719e-03,
        -3.5068017e-04,  5.0962175e-05, -2.3959419e-03,  7.1559247e-04,
        -5.1050410e-03,  8.9122978e-04,  9.3149669e-05, -3.9148685e-03,
        -4.3882113e-03,  4.6305635e-04, -4.2254775e-04,  1.0474981e-03,
        -7.4472616e-04, -3.8948609e-04,  1.8936922e-04, -8.3054934e-04,
         2.6607541e-03, -1.4299024e-03, -2.9695090e-03,  9.3016693e-05,
        -7.3364489e-03,  5.5990443e-03, -4.0414138e-04, -3.4429263e-03,
         3.7170056e-04,  8.9495480e-03, -8.9381076e-03,  8.6924230e-04,
         9.6922703e-03, -6.9327332e-05,  5.6973200e-05,  9.3519427e-03,
         7.9670884e-03, -9.2838873e-04, -4.1766829e-04,  3.9911084e-03,
        -5.1829591e-03, -6.2539446e-05,  2.2396019e-04,  3.3373319e-04,
         1.4399663e-03, -3.9255130e-04,  6.3455850e-03, -5.2057877e-03,
        -4.8054199e-04, -3.1893989e-05, -8.8852039e-04, -9.3998160e-04,
        -6.0781874e-03, -7.0530438e-04, -9.5783919e-03,  6.0851389e-04,
        -3.8271013e-04, -4.7481997e-04,  5.8635283e-04,  2.6463429e-03,
        -5.6117470e-04,  3.7924722e-03,  1.1695462e-04, -6.6042691e-03,
        -8.7568641e-04,  8.8997750e-04, -6.6898465e-03, -1.0614686e-03,
         5.1486772e-05, -3.3627190e-03,  2.5080387e-03, -6.6648424e-03,
         4.4970334e-04,  4.9845054e-04, -4.7005210e-03, -2.5945628e-04,
         9.1174571e-04, -7.5528835e-04,  1.8872312e-04,  7.7934973e-03,
         1.7913894e-04, -3.0925255e-03, -2.2026710e-04,  9.6116913e-04,
        -4.2779204e-03,  3.5862025e-04,  1.8286490e-04, -2.2481941e-04,
         3.0743988e-05, -2.7570277e-04, -1.0916224e-03,  7.7094621e-04,
        -8.3940057e-04, -5.4107816e-04,  6.3902128e-04,  5.0655138e-03,
        -1.6584397e-04, -6.4241737e-03, -6.9499984e-03,  4.6305768e-03]],
      dtype=float32)>, <tf.Tensor: shape=(128,), dtype=float32, numpy=
array([ 0.01512584,  0.03748416,  0.02169956, -0.00258691,  0.01754155,
        0.00294562,  0.01224776, -0.00243655, -0.00246434,  0.00245306,
       -0.03345226,  0.02049631,  0.00201335,  0.0330115 ,  0.002464  ,
        0.00331935,  0.0004329 ,  0.02066178,  0.00048409,  0.00372135,
        0.00584911,  0.00227247, -0.00244891,  0.00219717, -0.00463347,
       -0.03985985, -0.02811416,  0.00060473, -0.00495585,  0.00307103,
       -0.00232946, -0.02360145,  0.00207145, -0.00030103, -0.01107245,
       -0.00422698, -0.02359344, -0.00526446, -0.00055023, -0.01809179,
       -0.02028023, -0.00273526,  0.00249597, -0.00618753,  0.00439907,
        0.00230068, -0.0011186 ,  0.00490602,  0.01229607, -0.00660804,
       -0.01372313, -0.00054945, -0.0339049 ,  0.02587542, -0.00186776,
       -0.01591152, -0.00219562,  0.04136167, -0.04130721, -0.00513458,
        0.04479305,  0.00040951, -0.00033654,  0.0432194 ,  0.03681934,
        0.00548396,  0.00246715,  0.01844491, -0.02395196,  0.00036942,
       -0.00132292, -0.00197135,  0.00665479, -0.0018142 ,  0.02932611,
       -0.02405798,  0.00283854,  0.0001884 , -0.00410632,  0.00555244,
       -0.02809033,  0.00416621, -0.0442651 , -0.00359447,  0.00226065,
        0.00280474, -0.00346356,  0.01223063,  0.00331484,  0.01752574,
       -0.00069085, -0.03052109,  0.00517265, -0.00525706, -0.0309184 ,
        0.00627005, -0.00030413, -0.01554138,  0.01159132, -0.03080157,
       -0.00265638, -0.00294433, -0.02172268,  0.0015326 ,  0.00421343,
        0.00446146, -0.00111478,  0.03601763, -0.00105817, -0.01429142,
        0.00130111, -0.00567759, -0.01977055, -0.00211836, -0.00108018,
       -0.00103895, -0.0001816 ,  0.00162857,  0.00644817, -0.00455395,
       -0.00387922,  0.00319613, -0.00377467,  0.02341064,  0.00097963,
       -0.02968903, -0.03211904,  0.02140048], dtype=float32)>, <tf.Tensor: shape=(128, 1), dtype=float32, numpy=
array([[6.72024116e-03],
       [9.58637521e-03],
       [2.45502405e-03],
       [2.07284727e-04],
       [9.85070132e-04],
       [4.29066160e-04],
       [5.61217219e-03],
       [1.97918678e-04],
       [1.06071180e-03],
       [3.43407155e-04],
       [2.19362415e-03],
       [4.80962172e-03],
       [3.72611481e-04],
       [7.66370073e-03],
       [9.43363085e-03],
       [1.40327393e-04],
       [1.09019782e-03],
       [3.93406861e-03],
       [3.82399507e-04],
       [1.01592962e-03],
       [7.32250977e-04],
       [3.56915087e-04],
       [2.53675738e-04],
       [8.14633444e-03],
       [9.28952917e-03],
       [4.51913662e-03],
       [2.01776065e-03],
       [3.53434309e-03],
       [1.12291382e-05],
       [4.18167299e-04],
       [3.52147501e-04],
       [7.41623342e-03],
       [5.30894264e-04],
       [4.35733353e-04],
       [7.80701637e-03],
       [1.06325257e-04],
       [5.77525049e-03],
       [3.91840091e-04],
       [2.72973790e-04],
       [3.98560427e-04],
       [8.25972855e-03],
       [7.65076547e-04],
       [6.07816270e-04],
       [6.04405068e-04],
       [1.05275901e-03],
       [1.22531812e-04],
       [1.05788209e-03],
       [2.50620273e-04],
       [4.83846478e-03],
       [7.21973926e-03],
       [7.68821687e-03],
       [3.88177694e-04],
       [7.06185028e-03],
       [9.22229141e-03],
       [4.49780561e-03],
       [1.21808005e-03],
       [5.60330926e-04],
       [1.29655423e-03],
       [1.14205154e-03],
       [1.01328804e-03],
       [4.07261029e-03],
       [7.42478078e-05],
       [1.10490900e-03],
       [6.74588233e-03],
       [9.88715328e-04],
       [5.35605475e-04],
       [7.92338571e-04],
       [5.05704619e-03],
       [4.60590236e-03],
       [7.73624983e-04],
       [2.85195798e-04],
       [7.05670391e-04],
       [1.48630608e-03],
       [7.00127706e-03],
       [5.13798930e-03],
       [1.43258646e-03],
       [2.71247118e-04],
       [4.21774108e-04],
       [1.48617569e-03],
       [1.18044161e-04],
       [1.62329897e-03],
       [4.29578242e-04],
       [4.41930816e-03],
       [1.53188666e-04],
       [4.11974237e-04],
       [1.98721347e-04],
       [8.71045806e-04],
       [4.50659543e-03],
       [4.16997500e-04],
       [3.30047309e-03],
       [5.93498349e-04],
       [1.01292785e-03],
       [2.10922211e-04],
       [6.66984764e-04],
       [6.91756234e-03],
       [7.58592854e-04],
       [6.01934153e-04],
       [5.90524450e-03],
       [2.05757841e-03],
       [2.71033309e-03],
       [9.81722143e-04],
       [6.18368329e-04],
       [6.45802170e-03],
       [1.08337379e-03],
       [2.21721549e-03],
       [6.73443210e-05],
       [3.22015636e-04],
       [7.31643289e-03],
       [2.68306525e-04],
       [5.67659736e-03],
       [9.76425828e-04],
       [1.09720603e-03],
       [4.07111645e-03],
       [1.06133264e-03],
       [2.51109246e-04],
       [4.58252802e-03],
       [1.16448275e-04],
       [5.29439376e-06],
       [9.66056134e-04],
       [8.50669632e-04],
       [9.67126712e-03],
       [5.57682477e-04],
       [9.34950134e-04],
       [3.45182046e-03],
       [7.76557194e-04],
       [8.37770104e-03],
       [2.47265957e-03],
       [4.95623238e-03]], dtype=float32)>, <tf.Tensor: shape=(1,), dtype=float32, numpy=array([-0.00301373], dtype=float32)>]